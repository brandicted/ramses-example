#%RAML 0.8
---
title: Example REST API
documentation:
    - title: Home
      content: |
        Welcome to the example API.
baseUri: http://localhost:6543/api
version: v1
mediaType: application/json
protocols: [HTTP, HTTPS]
securitySchemes:
    - x_token_auth:
        description: Authorization header token policy
        type: x-ApiKey
    - x_ticket_auth:
        description: Standard Pyramid Auth Ticket policy
        type: x-Ticket
        settings:
            secret: auth_tkt_secret
            hashalg: sha512
            cookie_name: ramses_auth_tkt
            http_only: true
    - read_only_users:
        description: ACL that allows authenticated users to read collection
        type: x-ACL
        settings:
            collection: |
                allow admin all
                allow authenticated get
            item: |
                allow admin all
                allow authenticated get
    - read_only_useritem_everyone:
        description: ACL that allows everyone to read item, authenticated users to read collection
        type: x-ACL
        settings:
            collection: |
                allow admin all
                allow authenticated get
            item: |
                allow admin all
                allow everyone get
                allow {{user_self}} patch
securedBy: [x_ticket_auth]

/stories:
    securedBy: [read_only_users]
    displayName: All stories
    get:
        description: Get all stories
        queryParameters:
            q:
                displayName: Query
                type: string
                required: false
                example: foobar
                minLength: 1
            _limit:
                displayName: Limit
                type: integer
                required: false
                minimum: 1
            _sort:
                displayName: Start
                type: string
                required: false
                enum: ["name", "description"]
            _count:
                displayName: Count
                type: boolean
                required: false
        responses:
            200:
                body:
                    application/json:
                        schema: !include schemas/collection_response.json
                headers:
                    Content-Length:
                        displayName: Content length
                        description: Demo content length header
                        type: integer
                        required: true
                        minimum: 1
    post:
        description: Create a new story
        queryParameters:
            _refresh_index:
                displayName: RefreshIndex
                type: boolean
                required: false
        body:
            application/json:
                schema: !include schemas/story.json
                example: !include schemas/story_body_example.json
        responses:
            201:
                body:
                    application/json:
                        schema: !include schemas/story_item_response.json
                headers:
                    Content-Length:
                        displayName: Content length
                        description: Demo content length header
                        type: integer
                        required: true
                        minimum: 1
    patch:
        description: Update multiple stories
    delete:
        description: Delete multiple stories
    head:
        description: Determine whether a given resource is available
    options:
        description: Retrieve the available HTTP verbs for a given resource

    /{id}:
        displayName: One story
        get:
            description: Get a particular story
        delete:
            description: Delete a particular story
        patch:
        put:
            description: Update a particular story
        head:
            description: Determine whether a given resource is available
        options:
            description: Retrieve the available HTTP verbs for a given resource

/users:
    securedBy: [read_only_useritem_everyone]
    displayName: All users
    get:
        description: Get all users
        responses:
            200:
                body:
                    application/json:
                        schema: !include schemas/collection_response.json
                headers:
                    Content-Length:
                        displayName: Content length
                        description: Demo content length header
                        type: integer
                        required: true
                        minimum: 1
    post:
        description: Create a new user
        body:
            application/json:
                schema: !include schemas/user.json
    patch:
        description: Update multiple users
    head:
        description: Determine whether a given resource is available
    options:
        description: Retrieve the available HTTP verbs for a given resource

    /{username}:
        displayName: One user
        get:
            description: Get a particular user
        patch:
        put:
            description: Update a particular user
        delete:
            description: Delete a particular user

        /settings:
            displayName: User settings
            get:
                description: Get all settings of a particular user
            post:
                description: Change a user's settings

        /groups:
            displayName: User groups
            get:
                description: Get all groups of a particular user
            post:
                description: Change a user's groups

        /profile:
            displayName: User profile
            get:
                description: Get a user's profile
            post:
                description: Create a user's profile
                body:
                    application/json:
                        schema: !include schemas/profile.json
            patch:
                description: Update a user's profile
